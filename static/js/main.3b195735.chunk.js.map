{"version":3,"sources":["components/ProfileCard/index.jsx","components/UsersList/index.jsx","components/UsersList/SearchInput/index.jsx","components/UsersList/FilterState/index.jsx","components/Pagination/index.jsx","api/index.js","components/App.jsx","api/users.js","reportWebVitals.js","index.js"],"names":["ProfileCard","currentProfile","isProfile","className","firstName","lastName","description","adress","streetAddress","city","state","zip","UsersList","sortUsers","setTypeOfSortCallBack","setIsProfileCallBack","setCurrentProfileCallBack","showProfile","e","currentId","Number","target","parentNode","firstChild","innerText","currentUser","find","user","id","setSortValue","sortTarget","sortTargetValue","charAt","toLowerCase","slice","length","split","join","border","width","map","field","onClick","i","email","phone","SearchInput","searchValue","setSearchValueCallBack","action","type","value","placeholder","onChange","FilterState","filterUsers","states","Pagination","setIndexesCallBack","indexes","sortSearchUsers","useState","pages","setPages","showCurrentPage","currentNum","start","end","prevPage","el","page","nextPage","sendRequest","requestUrl","a","method","body","headers","options","JSON","stringify","fetch","response","get","includes","json","Error","App","users","setUsers","setIndexes","setIsProfile","setCurrentProfile","typeOfSort","setTypeOfSort","setSearchValue","filterState","setFilterState","fetchUsers","useCallback","usersData","sort","b","console","log","useEffect","useMemo","localeCompare","Boolean","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b195735.chunk.js","sourcesContent":["//libraries\r\nimport React from 'react';\r\n//styles\r\nimport './ProfileCard.scss';\r\n\r\nconst ProfileCard = ({ currentProfile, isProfile }) => {\r\n  return (\r\n    <>\r\n      {isProfile && (\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__info\">\r\n            <h2>Profile Info:</h2>\r\n            <p>Selected Profile: {currentProfile.firstName} {currentProfile.lastName}</p>\r\n            <p>Description: {currentProfile.description}</p>\r\n            <p>Address: {currentProfile.adress.streetAddress}</p>\r\n            <p>City: {currentProfile.adress.city}</p>\r\n            <p>State: {currentProfile.adress.state}</p>\r\n            <p>Index: {currentProfile.adress.zip}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default ProfileCard;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport '../UsersList/UsersList.scss';\r\n\r\nconst UsersList = ({ sortUsers, setTypeOfSortCallBack, setIsProfileCallBack, setCurrentProfileCallBack }) => {\r\n  const fields = ['ID', 'First Name', 'Last Name', 'Email', 'Phone', 'State',]\r\n\r\n  const showProfile = (e) => {\r\n    const currentId = Number(e.target.parentNode.firstChild.innerText);\r\n    const currentUser = sortUsers.find(user => user.id === currentId);\r\n    setIsProfileCallBack(true);\r\n    setCurrentProfileCallBack(currentUser);\r\n  }\r\n\r\n  const setSortValue = (e) => {\r\n    let sortTarget = e.target.parentNode.innerText;\r\n    sortTarget = sortTarget.charAt(0).toLowerCase() + sortTarget.slice(1, sortTarget.length);\r\n    let sortTargetValue = sortTarget.slice(0, sortTarget.length - 2).split(' ').join('');\r\n    setTypeOfSortCallBack(sortTargetValue);\r\n  }\r\n\r\n  return (\r\n    <table className=\"users__list\" border=\"1\" width=\"100%\">\r\n      <thead>\r\n        <tr className=\"table__head\">\r\n          {fields.map(field => (\r\n            <th key={field} onClick={setSortValue}>{field}<span className=\"table__sort\">&#9660;</span></th>)\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {sortUsers.map((user, i) => (\r\n          <tr key={user.id + i} className=\"user__item\" onClick={showProfile}>\r\n            <td>{user.id}</td>\r\n            <td>{user.firstName}</td>\r\n            <td>{user.lastName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.phone}</td>\r\n            <td>{user.adress.state}</td>\r\n          </tr>\r\n        )\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\nexport default UsersList;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport './SearchInput.scss';\r\n\r\nconst SearchInput = ({ searchValue, setSearchValueCallBack }) => {\r\n  return (\r\n    <div className=\"search__input\">\r\n      <form action=\"#\">\r\n        <input\r\n          className=\"users__search-input\"\r\n          type=\"text\"\r\n          id=\"search-input\"\r\n          value={searchValue}\r\n          placeholder=\"Search by name...\"\r\n          onChange={(e) => setSearchValueCallBack(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchInput;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport '../FilterState/FilterState.scss';\r\n\r\nconst FilterState = ({ filterUsers, states }) => {\r\n\r\n  return (\r\n    <div className=\"sort__select\">\r\n      <select className=\"sort__select-item\" onChange={filterUsers}>\r\n        <option value=\"\">Filter by state:</option>\r\n        {states.map(state => (\r\n          <option key={state} value={state}>{state}</option>)\r\n        )}\r\n\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\nexport default FilterState;","//libraries\r\nimport React, { useState } from 'react';\r\n//styles\r\nimport './Pagination.scss';\r\n\r\nconst Pagination = ({ setIndexesCallBack, indexes, sortSearchUsers, setSearchValueCallBack }) => {\r\n  const [pages, setPages] = useState([1, 2, 3]);\r\n\r\n  const getNextPage = () => {\r\n    if (!sortSearchUsers.length) return;\r\n    setIndexesCallBack({ start: indexes.start + 20, end: indexes.end + 20 })\r\n    const nextPage = pages.map(el => el + 1);\r\n    setPages(nextPage);\r\n    setSearchValueCallBack('')\r\n  }\r\n\r\n  const getPrevPage = () => {\r\n    if (indexes.start <= 0) return;\r\n    setIndexesCallBack({ start: indexes.start - 20, end: indexes.end - 20 })\r\n    const prevPage = pages.map(el => el - 1);\r\n    setPages(prevPage);\r\n    setSearchValueCallBack('')\r\n  }\r\n\r\n  const showCurrentPage = (e) => {\r\n    const currentNum = Number(e.target.innerText);\r\n    setIndexesCallBack({ start: (currentNum * 20) - 20, end: currentNum * 20 });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination__container\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"pagination__button prev\"\r\n        onClick={getPrevPage}\r\n      >\r\n        Previous\r\n      </button>\r\n      {pages.map((page, i) => (\r\n        <button\r\n          type=\"button\"\r\n          className={i === 0 ? \"pagination__button active\" : \"pagination__button\"}\r\n          onClick={showCurrentPage}\r\n        >\r\n          {page}\r\n        </button>\r\n      )\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"pagination__button next\"\r\n        onClick={getNextPage}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default Pagination;","export const sendRequest = async (\r\n  requestUrl,\r\n  method = 'GET',\r\n  body = {},\r\n  headers = {},\r\n) => {\r\n  const options = {\r\n    method,\r\n    headers: {\r\n      ...headers,\r\n    }\r\n  };\r\n\r\n  if (method === 'POST' || method === 'PUT') {\r\n    options.body = JSON.stringify(body);\r\n  }\r\n\r\n  const response = await fetch(requestUrl, options);\r\n\r\n  const contentType = response.headers.get('Content-Type');\r\n\r\n  if (contentType.includes('application/json')) {\r\n    return await response.json();\r\n  }\r\n\r\n  throw new Error('Unexpected content type');\r\n};","//libraries\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\n//components\nimport ProfileCard from './ProfileCard/index';\nimport UsersList from './UsersList/index';\nimport SearchInput from './UsersList/SearchInput/index';\nimport FilterState from './UsersList/FilterState/index';\nimport Pagination from './Pagination/index';\n//api\nimport { getUsers } from \"../api/users\";\n//styles\nimport './App.scss';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [indexes, setIndexes] = useState({ start: 0, end: 20 });\n  const [isProfile, setIsProfile] = useState(false);\n  const [currentProfile, setCurrentProfile] = useState({});\n  const [typeOfSort, setTypeOfSort] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [filterState, setFilterState] = useState('');\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      const usersData = (await getUsers()) || [];\n      setUsers(usersData.sort((a, b) => a['id'] - b['id']).slice(indexes.start, indexes.end));\n    } catch (error) {\n      console.log(error)\n    }\n  }, [indexes]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const sortUsers = useMemo(() => {\n    switch (true) {\n      case typeOfSort === 'iD':\n        return [...users].sort((a, b) => a[typeOfSort] - b[typeOfSort])\n      case typeOfSort === 'firstName':\n        return [...users].sort((a, b) => a[typeOfSort].localeCompare(b[typeOfSort]))\n      case typeOfSort === 'lastName':\n        return [...users].sort((a, b) => a[typeOfSort].localeCompare(b[typeOfSort]))\n      case typeOfSort === 'firstName':\n        return [...users].sort((a, b) => a[typeOfSort].localeCompare(b[typeOfSort]))\n      case typeOfSort === 'email':\n        return [...users].sort((a, b) => a[typeOfSort].localeCompare(b[typeOfSort]))\n      case typeOfSort === 'phone':\n        return [...users].sort((a, b) => a[typeOfSort].localeCompare(b[typeOfSort]))\n      case typeOfSort === 'state':\n        return [...users].sort((a, b) => a.adress[typeOfSort].localeCompare(b.adress[typeOfSort]))\n      default:\n        return users;\n    }\n  }, [typeOfSort, users, filterState])\n\n  const sortSearchUsers = useMemo(() => {\n    if (Boolean(filterState)) {\n      return sortUsers.filter(user => user.adress.state === filterState)\n    }\n    return sortUsers.filter(user => user.firstName.toLowerCase().includes(searchValue));\n  }, [searchValue, sortUsers, filterState])\n\n  const filterUsers = (e) => {\n    setTypeOfSort('');\n    setFilterState(e.target.value);\n  }\n\n  const states = sortUsers.map(user => user.adress.state);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"users__title\">Users App</h1>\n      <div className=\"sort-search__container\">\n        <SearchInput searchValue={searchValue} setSearchValueCallBack={setSearchValue} />\n        <FilterState states={states} filterUsers={filterUsers} />\n      </div>\n      <div className=\"users__container\">\n        {sortSearchUsers.length ?\n          (<>\n            <UsersList\n              sortUsers={sortSearchUsers}\n              setTypeOfSortCallBack={setTypeOfSort}\n              setIsProfileCallBack={setIsProfile}\n              setCurrentProfileCallBack={setCurrentProfile}\n            />\n          </>\n          ) : (<h2 className=\"users__not-found\">No Users! Change search and filter values!</h2>)}\n        <Pagination\n          indexes={indexes}\n          setIndexesCallBack={setIndexes}\n          sortSearchUsers={sortSearchUsers}\n          setSearchValueCallBack={setSearchValue}\n        />\n        {sortSearchUsers.length ? (<ProfileCard currentProfile={currentProfile} isProfile={isProfile} />) : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { sendRequest } from './index';\r\nconst requestUrl = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json';\r\n\r\nexport const getUsers = () => {\r\n  return sendRequest(requestUrl);\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}