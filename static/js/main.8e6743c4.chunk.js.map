{"version":3,"sources":["components/ProfileCard/index.jsx","components/UsersList/index.jsx","components/UsersList/SearchInput/index.jsx","components/UsersList/FilterState/index.jsx","components/Pagination/index.jsx","api/index.js","components/App.jsx","api/users.js","reportWebVitals.js","index.js"],"names":["ProfileCard","currentProfile","isProfile","className","firstName","lastName","description","adress","streetAddress","city","state","zip","UsersList","props","sortTargetValue","showProfile","e","currentId","Number","target","parentNode","firstChild","innerText","currentUser","sortUsers","find","user","id","setIsProfileCallBack","setCurrentProfileCallBack","setSortValue","sortTarget","charAt","toLowerCase","slice","length","split","join","typeOfSort","setIsClickedSortCallBack","isClickedSort","setTypeOfSortCallBack","border","width","map","field","onClick","i","email","phone","SearchInput","searchValue","setSearchValueCallBack","action","type","value","placeholder","onChange","FilterState","filterUsers","states","Pagination","setIndexesCallBack","indexes","sortSearchUsers","useState","pages","setPages","showCurrentPage","currentNum","start","end","prevPage","el","page","nextPage","sendRequest","requestUrl","a","method","body","headers","options","JSON","stringify","fetch","response","get","includes","json","Error","App","users","setUsers","setIndexes","setIsProfile","setCurrentProfile","setTypeOfSort","setSearchValue","filterState","setFilterState","setIsClickedSort","direction","fetchUsers","useCallback","usersData","console","log","useEffect","sortData","data","order","sort","b","localeCompare","useMemo","Boolean","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e6743c4.chunk.js","sourcesContent":["//libraries\r\nimport React from 'react';\r\n//styles\r\nimport './ProfileCard.scss';\r\n\r\nconst ProfileCard = ({ currentProfile, isProfile }) => {\r\n  return (\r\n    <>\r\n      {isProfile && (\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__info\">\r\n            <h2>Profile Info:</h2>\r\n            <p>Selected Profile: {currentProfile.firstName} {currentProfile.lastName}</p>\r\n            <p>Description: {currentProfile.description}</p>\r\n            <p>Address: {currentProfile.adress.streetAddress}</p>\r\n            <p>City: {currentProfile.adress.city}</p>\r\n            <p>State: {currentProfile.adress.state}</p>\r\n            <p>Index: {currentProfile.adress.zip}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default ProfileCard;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport '../UsersList/UsersList.scss';\r\n\r\nconst UsersList = (props) => {\r\n  const fields = ['id', 'First Name', 'Last Name', 'Email', 'Phone', 'State',]\r\n  let sortTargetValue;\r\n\r\n  const showProfile = (e) => {\r\n    const currentId = Number(e.target.parentNode.firstChild.innerText);\r\n    const currentUser = props.sortUsers.find(user => user.id === currentId);\r\n    props.setIsProfileCallBack(true);\r\n    props.setCurrentProfileCallBack(currentUser);\r\n  }\r\n\r\n  const setSortValue = (e) => {\r\n    let sortTarget = e.target.parentNode.innerText;\r\n    sortTarget = sortTarget.charAt(0).toLowerCase() + sortTarget.slice(1, sortTarget.length);\r\n    sortTargetValue = sortTarget.slice(0, sortTarget.length - 2).split(' ').join('');\r\n\r\n    if (props.typeOfSort.toLowerCase() === sortTargetValue.toLowerCase()) {\r\n      props.setIsClickedSortCallBack(!props.isClickedSort);\r\n    } else {\r\n      props.setIsClickedSortCallBack(false);\r\n    }\r\n    props.setTypeOfSortCallBack(sortTargetValue);\r\n  }\r\n\r\n  return (\r\n    <table className=\"users__list\" border=\"1\" width=\"100%\">\r\n      <thead>\r\n        <tr className=\"table__head\">\r\n          {fields.map(field => (\r\n            <th key={field} onClick={setSortValue}>{field}<span className=\"table__sort\">&#9660;</span></th>)\r\n          )}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.sortUsers.map((user, i) => (\r\n          <tr key={user.id + user.phone} className=\"user__item\" onClick={showProfile}>\r\n            <td>{user.id}</td>\r\n            <td>{user.firstName}</td>\r\n            <td>{user.lastName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.phone}</td>\r\n            <td>{user.adress.state}</td>\r\n          </tr>\r\n        )\r\n        )}\r\n      </tbody>\r\n    </table >\r\n  )\r\n}\r\nexport default UsersList;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport './SearchInput.scss';\r\n\r\nconst SearchInput = ({ searchValue, setSearchValueCallBack }) => {\r\n  return (\r\n    <div className=\"search__input\">\r\n      <form action=\"#\">\r\n        <input\r\n          className=\"users__search-input\"\r\n          type=\"text\"\r\n          id=\"search-input\"\r\n          value={searchValue}\r\n          placeholder=\"Search by name...\"\r\n          onChange={(e) => setSearchValueCallBack(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SearchInput;","//libraries\r\nimport React from 'react';\r\n//styles\r\nimport '../FilterState/FilterState.scss';\r\n\r\nconst FilterState = ({ filterUsers, states }) => {\r\n\r\n  return (\r\n    <div className=\"sort__select\">\r\n      <select className=\"sort__select-item\" onChange={filterUsers}>\r\n        <option value=\"\">Filter by state:</option>\r\n        {states.map((state, i) => (\r\n          <option key={(state + i)} value={state}>{state}</option>)\r\n        )}\r\n\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\nexport default FilterState;","//libraries\r\nimport React, { useState } from 'react';\r\n//styles\r\nimport './Pagination.scss';\r\n\r\nconst Pagination = ({ setIndexesCallBack, indexes, sortSearchUsers, setSearchValueCallBack }) => {\r\n  const [pages, setPages] = useState([1, 2, 3]);\r\n\r\n  const getNextPage = () => {\r\n    if (!sortSearchUsers.length) return;\r\n    setIndexesCallBack({ start: indexes.start + 20, end: indexes.end + 20 })\r\n    const nextPage = pages.map(el => el + 1);\r\n    setPages(nextPage);\r\n    setSearchValueCallBack('')\r\n  }\r\n\r\n  const getPrevPage = () => {\r\n    if (indexes.start <= 2 || sortSearchUsers.length < 10 && sortSearchUsers.length !== 0) return;\r\n    setIndexesCallBack({ start: indexes.start - 20, end: indexes.end - 20 })\r\n    const prevPage = pages.map(el => el - 1);\r\n    setPages(prevPage);\r\n    setSearchValueCallBack('')\r\n  }\r\n\r\n  const showCurrentPage = (e) => {\r\n    const currentNum = Number(e.target.innerText);\r\n    setIndexesCallBack({ start: (currentNum * 20) - 20, end: currentNum * 20 });\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination__container\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"pagination__button prev\"\r\n        onClick={getPrevPage}\r\n      >\r\n        Previous\r\n      </button>\r\n      {pages.map((page, i) => (\r\n        <button\r\n          key={(page + i)}\r\n          type=\"button\"\r\n          className={i === 0 ? \"pagination__button active\" : \"pagination__button\"}\r\n          onClick={showCurrentPage}\r\n        >\r\n          {page}\r\n        </button>\r\n      )\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"pagination__button next\"\r\n        onClick={getNextPage}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default Pagination;","export const sendRequest = async (\r\n  requestUrl,\r\n  method = 'GET',\r\n  body = {},\r\n  headers = {},\r\n) => {\r\n  const options = {\r\n    method,\r\n    headers: {\r\n      ...headers,\r\n    }\r\n  };\r\n\r\n  if (method === 'POST' || method === 'PUT') {\r\n    options.body = JSON.stringify(body);\r\n  }\r\n\r\n  const response = await fetch(requestUrl, options);\r\n\r\n  const contentType = response.headers.get('Content-Type');\r\n\r\n  if (contentType.includes('application/json')) {\r\n    return await response.json();\r\n  }\r\n\r\n  throw new Error('Unexpected content type');\r\n};","//libraries\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\n//components\nimport ProfileCard from './ProfileCard/index';\nimport UsersList from './UsersList/index';\nimport SearchInput from './UsersList/SearchInput/index';\nimport FilterState from './UsersList/FilterState/index';\nimport Pagination from './Pagination/index';\n//api\nimport { getUsers } from \"../api/users\";\n//styles\nimport './App.scss';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [indexes, setIndexes] = useState({ start: 0, end: 20 });\n  const [isProfile, setIsProfile] = useState(false);\n  const [currentProfile, setCurrentProfile] = useState({});\n  const [typeOfSort, setTypeOfSort] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [filterState, setFilterState] = useState('');\n  const [isClickedSort, setIsClickedSort] = useState(false);\n  let direction = !isClickedSort ? 'asc' : 'desc';\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      const usersData = (await getUsers()) || [];\n      setUsers(usersData.slice(indexes.start, indexes.end));\n    } catch (error) {\n      console.log(error)\n    }\n  }, [indexes]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const sortData = (data = [], type, order = direction) => {\n    return [...data].sort((a, b) => order === 'asc' ? a[type]?.localeCompare(b[type]) : b[type]?.localeCompare(a[type]));\n  }\n\n  const sortUsers = useMemo((order) => {\n    switch (true) {\n      case typeOfSort === 'id' && direction === 'asc':\n        return [...users].sort((a, b) => a[typeOfSort] - b[typeOfSort]);\n      case typeOfSort === 'id' && direction === 'desc':\n        return [...users].sort((a, b) => b[typeOfSort] - a[typeOfSort]);\n      case typeOfSort === 'state' && direction === 'asc':\n        return [...users].sort((a, b) => a.adress[typeOfSort].localeCompare(b.adress[typeOfSort]))\n      case typeOfSort === 'state' && direction === 'desc':\n        return [...users].sort((a, b) => b.adress[typeOfSort].localeCompare(a.adress[typeOfSort]))\n      default:\n        return sortData(users, typeOfSort, order)\n    }\n  }, [typeOfSort, users, filterState, sortData])\n\n  const sortSearchUsers = useMemo(() => {\n    if (Boolean(filterState)) {\n      return sortUsers.filter(user => user.adress.state === filterState)\n    }\n    return sortUsers.filter(user => user.firstName.toLowerCase().includes(searchValue.toLowerCase()));\n  }, [searchValue, sortUsers, filterState])\n\n  const filterUsers = (e) => {\n    setTypeOfSort('');\n    setFilterState(e.target.value);\n  }\n\n  const states = sortUsers.map(user => user.adress.state);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"users__title\">Users App</h1>\n      <div className=\"sort-search__container\">\n        <SearchInput searchValue={searchValue} setSearchValueCallBack={setSearchValue} />\n        <FilterState states={states} filterUsers={filterUsers} />\n      </div>\n      <div className=\"users__container\">\n        {sortSearchUsers.length ?\n          (<>\n            <UsersList\n              sortUsers={sortSearchUsers}\n              setTypeOfSortCallBack={setTypeOfSort}\n              setIsProfileCallBack={setIsProfile}\n              setCurrentProfileCallBack={setCurrentProfile}\n              setIsClickedSortCallBack={setIsClickedSort}\n              typeOfSort={typeOfSort}\n              isClickedSort={isClickedSort}\n            />\n          </>\n          ) : (<h2 className=\"users__not-found\">No Users! Change search and filter values!</h2>)}\n        <Pagination\n          indexes={indexes}\n          setIndexesCallBack={setIndexes}\n          sortSearchUsers={sortSearchUsers}\n          setSearchValueCallBack={setSearchValue}\n        />\n        {sortSearchUsers.length ? (<ProfileCard currentProfile={currentProfile} isProfile={isProfile} />) : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { sendRequest } from './index';\r\nconst requestUrl = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json';\r\n\r\nexport const getUsers = () => {\r\n  return sendRequest(requestUrl);\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}